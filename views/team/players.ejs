<div class="container">
  <h1>Players</h1>
  <div class="pb-2 w-25">
    <input class="form-control" id="myInput" type="text" placeholder="Search..">
  </div>
  
  <div class="row">
    <!-- Filters -->
    <div class="col">
      <div class="pb-3">
        <button class="btn btn-primary" type="button" data-toggle="collapse" data-target="#orderBy">
          Order by
        </button>
      </div>
      <div id="orderBy" class="collapse show pb-3">
        <div class="form-check">
          <input class="form-check-input" type="radio" name="myOrder" id="alphaAZ" value="option1">
          <label class="form-check-label" for="myOrder">
            Player name (A-Z)
          </label>
        </div>
        <div class="form-check">
          <input class="form-check-input" type="radio" name="myOrder" id="alphaZA" value="option2">
          <label class="form-check-label" for="myOrder">
            Player name (Z-A)
          </label>
        </div>
      </div>
      <div class="pb-3">
        <button class="btn btn-primary" type="button" data-toggle="collapse" data-target="#skillLevel">
          Skill Level (not available yet)
        </button>
      </div>
      <div id="skillLevel" class="collapse show pb-3">
        <div class="form-check">
          <input class="form-check-input" type="checkbox" value="beginner" id="beginner" name="playerSkill">
          <label class="form-check-label" for="defaultCheck1">
            Beginner
          </label>
        </div>
        <div class="form-check">
          <input class="form-check-input" type="checkbox" value="intermediate" id="intermediate" name="playerSkill">
          <label class="form-check-label" for="defaultCheck2">
            Intermediate
          </label>
        </div>
        <div class="form-check">
          <input class="form-check-input" type="checkbox" value="advanced" id="advanced" name="playerSkill">
          <label class="form-check-label" for="defaultCheck3">
            Advanced
          </label>
        </div>
      </div>
      <button type="button" class="btn btn-primary" id="clearFilters">Cear all filters</button>
    </div>

    <!-- Actual Data -->
    <div class="col-10">
      <div class="row row-cols-1 row-cols-md-3" id="myPlayers">
        <% players.forEach( item => { %>
          <div class="col mb-4 playerList">
            <div class="card">
                <img
                src="<%= item.picture %>"
                class="card-img-top"
                alt="player profile"
                width="380"
                height="200"
                />
                <div class="card-body">
                  <h5 class="card-title"><%= item.fname %> <%= item.lname %></h5>
                  <div class="card-text">
                      <p class="sport">Sport: <%= item.sport %></p>
                      <p class="skill">Skill: <%= item.skill %></p>
                  </div>
                  <a class="btn btn-primary" href= <%= "/players/" + item.id %>>Click here for more info</a>
                </div>
            </div>
          </div>
        <%})%>
      </div>
    </div>

  </div>
</div>

<!-- Event Listeners -->
<script>
  // Clear Function
  $(document).ready(function(){
    $("#clearFilters").on("click", function() {
      $('input[type=checkbox]').prop('checked',false);
      toggleCheckbox();
    });

    // Search Function
    $("#myInput").on("keyup", function() {
      var value = $(this).val().toLowerCase();
      $("#myPlayers .playerList").filter(function() {
        $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
      });
    });

    // Order by alphabet
    $("#alphaAZ").on("click", function() {
      var mylist = $('#myPlayers');
      var listitems = mylist.children('.playerList').get();
      listitems.sort(function(a, b) {
        return $(a).children('div').children('div').children('.card-title').text().toUpperCase().localeCompare($(b).children('div').children('div').children('.card-title').text().toUpperCase());
      })
      $.each(listitems, function(idx, itm) {
        for (let i = itm.classList.length - 1; i >= 0; i--) {
          const className = itm.classList[i];
          if (className.startsWith('order')) {
            itm.classList.remove(className);
          }
        }
        $(itm).addClass(`order-${(idx+1)}`)
      });
    });

    $("#alphaZA").on("click", function() {
      var mylist = $('#myPlayers');
      var listitems = mylist.children('.playerList').get();
      listitems.sort(function(a, b) {
        return $(a).children('div').children('div').children('.card-title').text().toUpperCase().localeCompare($(b).children('div').children('div').children('.card-title').text().toUpperCase());
      })
      $.each(listitems, function(idx, itm) {
        for (let i = itm.classList.length - 1; i >= 0; i--) {
          const className = itm.classList[i];
          if (className.startsWith('order')) {
            itm.classList.remove(className);
          }
        }
        $(itm).addClass(`order-${(listitems.length - idx)}`)
      });
    });
    
    // Filter by skill
    var allCheckboxes = document.querySelectorAll('input[type=checkbox]');
    var allPlayers = Array.from(document.querySelectorAll('.playerList'));
    var checked = {};

    getChecked('playerSkill');
    // getChecked('injured');

    Array.prototype.forEach.call(allCheckboxes, function (el) {
      el.addEventListener('change', toggleCheckbox);
    });

    function toggleCheckbox(e) {
      getChecked(e.target.name);
      setVisibility();
    }

    function getChecked(name) {
      checked[name] = Array.from(document.querySelectorAll('input[name=' + name + ']:checked')).map(function (el) {
        return el.value;
      });
    }

    function setVisibility() {
      allPlayers.map(function (el) {
        var playerSkill = checked.playerSkill.length ? _.intersection([($(el).children('div').children('div').children('.card-text').children('.skill').text().toLowerCase().substr(7))], checked.playerSkill).length : true;
        // var injured = checked.injured.length ? _.intersection(Array.from(el.classList), checked.injured).length : true;
        if (playerSkill) {
        // if (startingReserves && injured && position && nbaTeam && conference) {
          // el.style.display = 'block';
          $(el).toggle(true);
        } else {
          // el.style.display = 'none';
          $(el).toggle(false);
        }
      });
    }

  });
</script>
